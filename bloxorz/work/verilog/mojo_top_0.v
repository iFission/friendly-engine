/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    output reg outled,
    input button_right
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_io_button_left_button_conditioner_out;
  reg [1-1:0] M_io_button_left_button_conditioner_in;
  button_conditioner_2 io_button_left_button_conditioner (
    .clk(clk),
    .in(M_io_button_left_button_conditioner_in),
    .out(M_io_button_left_button_conditioner_out)
  );
  wire [1-1:0] M_io_button_right_button_conditioner_out;
  reg [1-1:0] M_io_button_right_button_conditioner_in;
  button_conditioner_2 io_button_right_button_conditioner (
    .clk(clk),
    .in(M_io_button_right_button_conditioner_in),
    .out(M_io_button_right_button_conditioner_out)
  );
  wire [1-1:0] M_io_button_centre_button_conditioner_out;
  reg [1-1:0] M_io_button_centre_button_conditioner_in;
  button_conditioner_2 io_button_centre_button_conditioner (
    .clk(clk),
    .in(M_io_button_centre_button_conditioner_in),
    .out(M_io_button_centre_button_conditioner_out)
  );
  wire [1-1:0] M_io_button_up_button_conditioner_out;
  reg [1-1:0] M_io_button_up_button_conditioner_in;
  button_conditioner_2 io_button_up_button_conditioner (
    .clk(clk),
    .in(M_io_button_up_button_conditioner_in),
    .out(M_io_button_up_button_conditioner_out)
  );
  wire [1-1:0] M_io_button_down_button_conditioner_out;
  reg [1-1:0] M_io_button_down_button_conditioner_in;
  button_conditioner_2 io_button_down_button_conditioner (
    .clk(clk),
    .in(M_io_button_down_button_conditioner_in),
    .out(M_io_button_down_button_conditioner_out)
  );
  wire [1-1:0] M_io_button_left_edge_detector_out;
  reg [1-1:0] M_io_button_left_edge_detector_in;
  edge_detector_7 io_button_left_edge_detector (
    .clk(clk),
    .in(M_io_button_left_edge_detector_in),
    .out(M_io_button_left_edge_detector_out)
  );
  wire [1-1:0] M_io_button_right_edge_detector_out;
  reg [1-1:0] M_io_button_right_edge_detector_in;
  edge_detector_7 io_button_right_edge_detector (
    .clk(clk),
    .in(M_io_button_right_edge_detector_in),
    .out(M_io_button_right_edge_detector_out)
  );
  wire [1-1:0] M_io_button_centre_edge_detector_out;
  reg [1-1:0] M_io_button_centre_edge_detector_in;
  edge_detector_7 io_button_centre_edge_detector (
    .clk(clk),
    .in(M_io_button_centre_edge_detector_in),
    .out(M_io_button_centre_edge_detector_out)
  );
  wire [1-1:0] M_io_button_up_edge_detector_out;
  reg [1-1:0] M_io_button_up_edge_detector_in;
  edge_detector_7 io_button_up_edge_detector (
    .clk(clk),
    .in(M_io_button_up_edge_detector_in),
    .out(M_io_button_up_edge_detector_out)
  );
  wire [1-1:0] M_io_button_down_edge_detector_out;
  reg [1-1:0] M_io_button_down_edge_detector_in;
  edge_detector_7 io_button_down_edge_detector (
    .clk(clk),
    .in(M_io_button_down_edge_detector_in),
    .out(M_io_button_down_edge_detector_out)
  );
  wire [16-1:0] M_game_player_position_out;
  reg [1-1:0] M_game_io_button_left;
  reg [1-1:0] M_game_io_button_right;
  reg [1-1:0] M_game_io_button_centre;
  reg [1-1:0] M_game_io_button_up;
  reg [1-1:0] M_game_io_button_down;
  game_12 game (
    .clk(clk),
    .rst(rst),
    .io_button_left(M_game_io_button_left),
    .io_button_right(M_game_io_button_right),
    .io_button_centre(M_game_io_button_centre),
    .io_button_up(M_game_io_button_up),
    .io_button_down(M_game_io_button_down),
    .player_position_out(M_game_player_position_out)
  );
  wire [8-1:0] M_led_grid_pixel;
  wire [1-1:0] M_led_grid_led;
  reg [256-1:0] M_led_grid_map;
  reg [8-1:0] M_led_grid_win_pos;
  reg [16-1:0] M_led_grid_player_pos;
  reg [1-1:0] M_led_grid_update;
  ledprocess_13 led_grid (
    .clk(clk),
    .rst(rst),
    .map(M_led_grid_map),
    .win_pos(M_led_grid_win_pos),
    .player_pos(M_led_grid_player_pos),
    .update(M_led_grid_update),
    .pixel(M_led_grid_pixel),
    .led(M_led_grid_led)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_io_button_left_button_conditioner_in = io_button[3+0-:1];
    M_io_button_left_edge_detector_in = M_io_button_left_button_conditioner_out;
    M_game_io_button_left = M_io_button_left_edge_detector_out;
    M_io_button_right_button_conditioner_in = button_right;
    M_io_button_right_edge_detector_in = M_io_button_right_button_conditioner_out;
    M_game_io_button_right = M_io_button_right_edge_detector_out;
    M_io_button_centre_button_conditioner_in = io_button[1+0-:1];
    M_io_button_centre_edge_detector_in = M_io_button_centre_button_conditioner_out;
    M_game_io_button_centre = M_io_button_centre_edge_detector_out;
    M_io_button_up_button_conditioner_in = io_button[0+0-:1];
    M_io_button_up_edge_detector_in = M_io_button_up_button_conditioner_out;
    M_game_io_button_up = M_io_button_up_edge_detector_out;
    M_io_button_down_button_conditioner_in = io_button[2+0-:1];
    M_io_button_down_edge_detector_in = M_io_button_down_button_conditioner_out;
    M_game_io_button_down = M_io_button_down_edge_detector_out;
    io_led[8+7-:8] = M_game_player_position_out[8+7-:8];
    io_led[0+7-:8] = M_game_player_position_out[0+7-:8];
    M_led_grid_update = 1'h1;
    M_led_grid_win_pos = 8'h75;
    M_led_grid_player_pos = M_game_player_position_out;
    M_led_grid_map = 256'hffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff;
    outled = M_led_grid_led;
  end
endmodule
