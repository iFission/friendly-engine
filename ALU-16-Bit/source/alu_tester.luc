module alu_tester(
    input clk, // clock
    input rst, // reset

    // // logic output a, b, cin, to be sent to full adder board
    // output alufn[6];
    // output a[16];
    // output b[16];

    // // login input s, count, to be received from full adder board
    // input ALU[16];

    // led output
    // output led_expected[8],
    output led_result[8],
    output led_test[8])
{

    .clk(clk)
    {
        .rst(rst)
        {
            
            dff counter[27];
            fsm test_case = {ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, PASS};
        }
    }
    alu16 alu16;

    always
    {

        // initial values
        counter.d = counter.q + 1; // connects dff's input to output + 1. everytime clk goes to high, q += 1
        led_test = 0;
        led_result = 0;
        // led_expected = 0;
        led_test = 0;
    
            alu16.a = 16b0;
            alu16.b = 16b0;
            alu16.alufn = 6b0;


    case (test_case.q) {
        test_case.ONE: // adder 16b0 + 16b0 = 16b0
            // led_expected = 8b00000000;
            led_test = 8b10000000; // current test is 1, reflected on io_led[1]
            
            alu16.a = 16b0;
            alu16.b = 16b0;
            alu16.alufn = 6b0;

            if (alu16.alu == 16b0)
            {
                led_result = 8b10000000;
                if (counter.q[26] == 1)
                {
                    test_case.d = test_case.TWO;
                }
            }

        test_case.TWO: // adder 16b0 + 16b1 = 16b1
            // led_expected = 8b00110000;
            led_test = 8b01000000;

            alu16.a = 16b0;
            alu16.b = 16b1;
            alu16.alufn = 6b0;

            if (alu16.alu == 16b1)
            {
                led_result = 8b11000000;
                if (counter.q[26] == 0)
                {
                    test_case.d = test_case.THREE;
                }
            }

        test_case.THREE: // bool 16b0 & 16b0 = 16b0
            // led_expected = 8b01010000;
            led_test = 8b00100000;

            alu16.a = 16b0;
            alu16.b = 16b0;
            alu16.alufn = 6b011000;

            if (alu16.alu == 16b0)
            {
                led_result = 8b11100000;
                if (counter.q[26] == 1)
                {
                    test_case.d = test_case.FOUR;
                }
            }

        test_case.FOUR: // bool 16b1 & 16b1 = 16b1
            // led_expected = 8b01101000;
            led_test = 8b00010000;
    
            alu16.a = 16b1;
            alu16.b = 16b1;
            alu16.alufn = 6b011000;

            if (alu16.alu == 16b1)
            {
                led_result = 8b11110000;
                if (counter.q[26] == 0)
                {
                    test_case.d = test_case.FIVE;
                }
            }

        test_case.FIVE: // shift 16b1 << 1 in binary 4b0001 = 16b10
            // led_expected = 8b10010000;
            led_test = 8b00001000;

            alu16.a = 16b1;
            alu16.b = 16b1;
            alu16.alufn = 6b100000;

            if (alu16.alu == 16b10)
            {
                led_result = 8b11111000;
                if (counter.q[26] == 1)
                {
                    test_case.d = test_case.SIX;
                }
            }

        test_case.SIX: // shift 16b1 << 5 in binary 4b0001 = 16b100000
            // led_expected = 8b10101000;
            led_test = 8b00000100;

            alu16.a = 16b1;
            alu16.b = 16b101;
            alu16.alufn = 6b100000;

            if (alu16.alu == 16b100000)
            {
                led_result = 8b11111100;
                if (counter.q[26] == 0)
                {
                    test_case.d = test_case.SEVEN;
                }
            }

        test_case.SEVEN: // cmp16 a=16b0, b=16b0, a==b true
            // led_expected = 8b11001000;
            led_test = 8b00000010;

            alu16.a = 16b0;
            alu16.b = 16b0;
            alu16.alufn = 6b110011;

            if (alu16.alu == 16b1)
            {
                led_result = 8b11111110;
                if (counter.q[26] == 1)
                {
                    test_case.d = test_case.EIGHT;
                }
            }

        test_case.EIGHT: // cmp16 a=16b0, b=16b0, a>b false
            // led_expected = 8b11111000;
            led_test = 8b00000001;

            alu16.a = 16b0;
            alu16.b = 16b0;
            alu16.alufn = 6b110101;

            if (alu16.alu == 16b0)
            {
                led_result = 8b11111111;
                if (counter.q[26] == 0)
                {
                    test_case.d = test_case.PASS;
                }
            }

        test_case.PASS :
            // led_expected = 8b11111111;
            led_test = 8b11111111;
            led_result = 8b11111111;

        }
    }
}
